swagger: '2.0'
info:
    version: v1
    title: RevenueWire JackFruit REST API (Alpha)
    description: This API *does not* represent the final product. Some of the APIs listed below are *highly experimental* and *will likely change* before the final release. They may come with *crashes and bugs* and may potentially cause *data loss*.
basePath: /rest/v1
consumes:
    - application/json
produces:
    - application/json

securityDefinitions:
    JWT:
      type: apiKey
      in: header
      name: X-Authorization-JWT
      description: JWT TOKEN (https://jwt.io)

    API-KEY:
      type: apiKey
      in: header
      name: X-API-KEY
      description: Platform User API KEY

security:
    - API-KEY: []
    - JWT: []
definitions:
    Context:
        description: 'Key value map'
        type: object
        properties:
            key:
                type: string
            value:
                type: string
    Response:
        description: 'Response Object'
        type: object
        properties:
            status:
                type: boolean
            message:
                type: string
            context:
                type: array
                items:
                    $ref: '#/definitions/Context'
    Error:
        description: 'Server Error Response'
        type: object
        properties:
            code:
                type: boolean
                description: 'HTTP STATUS CODE'
            message:
                type: string
            key:
                type: string
                description: 'error message key'
            context:
                type: array
                items:
                    $ref: '#/definitions/Context'
    AffiliateLink:
        description: 'Affiliate Link object'
        type: object
        required:
            - url
            - destinationId
        properties:
            url:
                type: string
            destinationId:
                type: integer
            aliasId:
                type: integer
    AffiliateAccount:
        description: 'Affiliate Account object'
        type: object
        properties:
            accountFid:
                type: string
            apiKey:
                type: string
            companyName:
                type: string
            website:
                type: string
            phone:
                type: string
            contactName:
                type: string
            technicalEmail:
                type: string
            address:
                type: string
            city:
                type: string
            stateProvince:
                type: string
            zipPostalCode:
                type: string
            gstNumber:
                type: string
            taxRegion:
                type: string
            paymentThreshold:
                type: integer
    Alias:
        description: 'Alias object'
        type: object
        required:
            - id
            - alias
        properties:
            id:
                type: integer
            alias:
                type: string
    Aliases:
        description: Aliases
        type: object
        required:
            - response
            - data
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: array
                items:
                    $ref: '#/definitions/Alias'
    BillInfoResponse:
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                $ref: '#/definitions/BillInfo'
    PaypalUrl:
        description: 'Paypal Url'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    paypalUrl:
                        type: string
    Customer:
        description: 'Customer object'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    id:
                        type: integer
                    email:
                        type: string
                    firstName:
                        type: string
                    lastName:
                        type: string
                    timezone:
                        type: string
                    language:
                        type: string
                    created:
                        type: string
                        format: date
                    addresses:
                        type: array
                        items:
                            $ref: '#/definitions/CustomerAddress'
                    phones:
                        type: array
                        items:
                            $ref: '#/definitions/CustomerPhone'
    CustomerAddress:
        description: 'Customer''s Addresses'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    id:
                        type: integer
                    customerAccountId:
                        type: integer
                    transactionId:
                        type: integer
                    name:
                        type: string
                    address:
                        type: string
                    address2:
                        type: string
                    countryCode:
                        type: string
                    regionCode:
                        type: string
                    city:
                        type: string
                    postalCode:
                        type: string
                    type:
                        type: string
    CustomerPhone:
        description: 'Customer''s phones'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    id:
                        type: integer
                    customerAccountId:
                        type: integer
                    phoneNumber:
                        type: string
                    countryCode:
                        type: string
                    type:
                        type: string
    CustomerOffers:
        description: 'Customer Offer'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: array
                items:
                    type: object
                    properties:
                        offerId:
                            type: integer
                            description: 'Offer Id'
                        transactionItemId:
                            type: integer
                            description: 'Transaction Item Id'
                        transactionId:
                            type: integer
                            description: 'Transaction Id'
                        name:
                            type: string
                            description: 'Offer Name'
                        translatedName:
                            type: string
                            description: 'Translated Offer Name'
                        productName:
                            type: string
                            description: 'Product Name'
                        translatedProductName:
                            type: string
                            description: 'Translated Product Name'
                        receiptUrl:
                            type: string
                            description: 'Receipt Url for this transaction'
                        isRecurring:
                            type: boolean
                        isTrial:
                            type: boolean
                        shippingAddress:
                            $ref: '#/definitions/CustomerAddress'
                        transactionItem:
                            description: 'Transaction Item'
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: 'Transaction Item Id'
                                sku:
                                    type: string
                                quantity:
                                    type: integer
                                price:
                                    type: number
                                priceTax:
                                    type: number
                                usdPrice:
                                    type: number
                                usdPriceTax:
                                    type: number
                                image:
                                    type: string
                        recurringTransactionItem:
                            description: 'Recurring Item'
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: 'Recurring Transaction Item Id'
                                offerId:
                                    type: integer
                                initialSaleDate:
                                    type: string
                                    format: date
                                nextBillingDate:
                                    type: string
                                    format: date
                                finalBillingDate:
                                    type: string
                                    format: date
                                interval:
                                    type: integer
                                rebillFrequencyType:
                                    type: string
                                rebillFrequencyValue:
                                    type: integer
                                deactivatedDate:
                                    type: string
                                    format: date
                                deactivatedType:
                                    type: string
                                status:
                                    type: string
                                customerBillingInfo:
                                    $ref: '#/definitions/CustomerPhone'
    Destination:
        description: 'Destinations object'
        type: object
        required:
            - id
            - fid
            - name
            - url
        properties:
            id:
                type: integer
            fid:
                type: string
            name:
                type: string
            url:
                type: string
            isCustom:
                type: boolean
            geos:
                type: string
    Domain:
        description: Domain
        type: object
        properties:
            id:
                type: integer
            key:
                type: string
                description: 'Unique identification of the domain resource'
            domain:
                type: string
            type:
                type: string
            merchant:
                type: string
            status:
                type: string
            emails:
                description: 'A list of emails if it is an email domain'
                type: array
                items:
                    $ref: '#/definitions/DomainEmail'
    DomainEmailLabel:
        description: 'Email Label'
        type: object
        properties:
            lang:
                type: string
            label:
                type: string
    DomainEmail:
        description: 'Domain Email'
        type: object
        properties:
            id:
                type: integer
            email:
                type: string
            labels:
                type: array
                items:
                    $ref: '#/definitions/DomainEmailLabel'
            primary:
                type: boolean
                default: true
    newDomain:
        description: 'Add new domain'
        type: object
        properties:
            email:
                type: string
            labels:
                type: array
                items:
                    $ref: '#/definitions/DomainEmailLabel'
    SupportedLanguages:
        description: 'Supported Languages'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: array
                items:
                    $ref: '#/definitions/SupportedLanguage'
    SupportedLanguage:
        description: 'Language Object'
        type: object
        properties:
            id:
                type: string
            text:
                type: string
    CountryList:
        description: 'A list of countries'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: array
                items:
                    $ref: '#/definitions/Country'
    Country:
        description: 'Country Object'
        type: object
        properties:
            id:
                type: string
            text:
                type: string
            states:
                type: array
                items:
                    $ref: '#/definitions/State'
    State:
        description: 'State Object'
        type: object
        properties:
            id:
                type: string
            text:
                type: string
    Merchant:
        description: 'Merchant info including block infos'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    merchantId:
                        type: integer
                    merchantName:
                        type: string
                    merchantFid:
                        type: string
                    blockedAffiliates:
                        $ref: '#/definitions/AffiliateBlockObjs'
    AffiliateBlockObj:
        description: 'A block used to block affiliate sell merchant products'
        type: object
        properties:
            blockId:
                type: integer
            affiliateId:
                type: integer
            affiliateFid:
                type: string
            affiliateName:
                type: string
    AffiliateBlockObjs:
        description: 'An array of affiliate block objects'
        type: array
        items:
            $ref: '#/definitions/AffiliateBlockObj'
    Transaction:
        description: Transaction
        type: object
        properties:
            id:
                type: integer
                description: 'Transaction Id'
            type:
                type: string
                description: 'Transaction Type'
            date:
                type: string
                format: date-time
            reference:
                type: string
            fullReference:
                type: string
            merchantNamr:
                type: string
            supportEmail:
                type: string
            totalPrice:
                type: number
            subTotalPrice:
                type: number
            totalPriceTax:
                type: number
            totalUsdPrice:
                type: number
            totalUsdPriceTax:
                type: number
            gateway:
                type: string
            gatewayReference:
                type: string
            extraParameters:
                type: string
            transactionItems:
                type: array
                items:
                    $ref: '#/definitions/TransactionItem'
            order:
                type: integer
            parentTransactionId:
                type: integer
            shippingAddress:
                $ref: '#/definitions/CustomerAddress'
            billInfo:
                $ref: '#/definitions/BillInfo'
    CustomerOrders:
        description: CustomerOrders
        type: object
        properties:
            orders:
                type: array
                items:
                    $ref: '#/definitions/CustomerOrder'
    CustomerOrder:
        description: CustomerOrder
        type: object
        properties:
            id:
                type: integer
                description: 'Order Id'
            created:
                type: string
                format: date-time
            reference:
                type: string
    BillInfo:
        description: 'Billing Information'
        type: object
        properties:
            id:
                type: integer
                description: 'Billing Information'
            gatewayProcessor:
                type: string
            currencyCode:
                type: string
            cardNumber:
                type: string
            cardType:
                type: string
            expiry:
                type: string
            payerId:
                type: string
            gatewayReference:
                type: string
            billingAddressName:
                type: string
            billingAddressAddress:
                type: string
            billingAddressAddress2:
                type: string
            billingAddressPostalCode:
                type: string
            billingAddressRegionCode:
                type: string
            billingAddressCountryCode:
                type: string
    TransactionItem:
        description: 'Transaction Item'
        type: object
        properties:
            id:
                type: integer
                description: 'Transaction Item Id'
            sku:
                type: string
            quantity:
                type: integer
            price:
                type: number
            priceTax:
                type: number
            usdPrice:
                type: number
            usdPriceTax:
                type: number
            image:
                type: string
    Profile:
        description: 'User''s Profile'
        type: object
        properties:
            id:
                type: integer
            username:
                type: string
            email:
                type: string
            firstName:
                type: string
            lastName:
                type: string
            timezone:
                type: string
            accountId:
                type: integer
            passwordExpiryDates:
                type: integer
            defaultDashboard:
                type: string
            defaultProductView:
                type: string
            lastLoginDate:
                type: string
            lastLoginIp:
                type: string
            language:
                type: string
    Offer:
        description: Offer
        type: object
        properties:
            id:
                type: integer
            sku:
                type: string
            name:
                type: string
            description:
                type: string
            created:
                type: string
            type:
                type: string
            isRecurring:
                type: boolean
            isTrial:
                type: boolean
            payout:
                type: integer
    NewTemplates:
        description: 'Sync new templates'
        type: array
        items:
            $ref: '#/definitions/NewTemplate'
    NewTemplate:
        description: 'New template'
        type: object
        required:
            - name
            - fid
            - scope
        properties:
            name:
                description: 'Template name'
                type: string
            fid:
                description: 'Template fid'
                type: string
            description:
                description: 'Template description'
                type: string
            thumbnail:
                description: 'Template thumbnail image url'
                type: string
            version:
                description: 'Current version of the template.'
                type: string
            scope:
                description: 'Scope of the template, either for all merchants or for specific merchant'
                type: string
                enum:
                    - PUBLIC
                    - LIMITED
            accounts:
                type: array
                items:
                    $ref: '#/definitions/AccountTemplate'
            mediaBlocks:
                type: array
                items:
                    $ref: '#/definitions/TemplateMediaBlock'
    AccountTemplate:
        description: 'Account Template'
        type: object
        required:
            - fid
            - status
        properties:
            fid:
                type: string
                description: 'Merchant''s fid'
            status:
                type: string
                enum:
                    - PENDING
                    - ACTIVE
                    - HIDE
    Templates:
        description: Templates
        type: object
        required:
            - response
            - data
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: array
                items:
                    $ref: '#/definitions/TemplateDataObject'
    TemplateDataObject:
        type: object
        required:
            - id
            - name
        properties:
            id:
                type: integer
            name:
                type: string
            fid:
                type: string
            description:
                type: string
            thumbnail:
                type: string
            scope:
                type: string
            accounts:
                type: array
                items:
                    $ref: '#/definitions/AccountTemplate'
            mediaBlocks:
                type: array
                items:
                    $ref: '#/definitions/TemplateMediaBlock'
    TemplateMediaBlock:
        type: object
        properties:
            key:
                type: string
            showToolbar:
                type: boolean
            defaultValue:
                type: string
    Deployment:
        description: 'Templates Deployment Status'
        type: object
        required:
            - response
            - data
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: string
                enum:
                    - OK
                    - FAILED
    Token:
        description: 'Token Object'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    token:
                        type: string
                        format: password
    Tracking:
        description: 'Tracking string'
        type: object
        required:
            - id
            - type
            - name
            - isGlobal
            - data
        properties:
            id:
                type: string
            type:
                type: string
            name:
                type: string
            isGlobal:
                type: boolean
            data:
                type: object
                description: 'custom object containing data specific to tracking type'
    PostbackTest:
        description: 'Tracking object'
        type: object
        required:
            - link
            - action
            - aliasFid
            - destinationName
            - responseCode
            - success
            - time
        properties:
            link:
                type: string
            action:
                type: string
            aliasFid:
                type: string
            destinationName:
                type: string
            responseCode:
                type: integer
            success:
                type: boolean
            time:
                type: string
                description: 'format: 2000-01-31T18:30:45+00:00'
    UpdateEmailResponse:
        description: 'response to a successfull email update request'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    token:
                        type: string
    Identity:
        description: 'Identify of an user'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    id:
                        type: integer
                    customerId:
                        type: integer
                    accountId:
                        type: integer
                    username:
                        type: string
                    isMerchant:
                        type: boolean
                    isStaff:
                        type: boolean
                    isAffiliate:
                        type: boolean
                    isCustomer:
                        type: boolean
                    email:
                        type: string
    User:
        description: 'User object'
        type: object
        properties:
            response:
                $ref: '#/definitions/Response'
            data:
                type: object
                properties:
                    id:
                        type: integer
                    username:
                        type: string
                    email:
                        type: string
                    firstName:
                        type: string
                    lastName:
                        type: string
                    timezone:
                        type: string
                    accountId:
                        type: integer
                    defaultDashboard:
                        type: string
                    defaultProductView:
                        type: string
                    passwordExpiryDates:
                        type: integer
                    lastLoginDate:
                        type: string
                    lastLoginIp:
                        type: string
                    language:
                        type: string
paths:
    /affiliatelinks:
        get:
            tags:
                - 'Affiliate linker Links'
            description: 'Get affiliate linker links'
            operationId: affiliateLinksGet
            parameters:
                -
                    name: catalogFid
                    in: query
                    description: 'Offer''s catalog FID'
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Array containing affiliate linker links'
                                type: array
                                items:
                                    $ref: '#/definitions/AffiliateLink'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /affiliatemerchantterms:
        post:
            tags:
                - 'Affiliate Merchant Terms'
            description: 'Accept merchant terms as an affiliate'
            operationId: affiliateMerchantTermsAdd
            parameters:
                -
                    name: merchantTermId
                    in: query
                    description: 'Merchant Term ID'
                    type: integer
                    required: true
                -
                    name: affiliateAccountId
                    in: query
                    description: 'Affiliate Group Account ID (internal use only)'
                    type: integer
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/affiliates/{id}':
        get:
            tags:
                - Affiliates
            description: 'Get an affiliate''s company account information'
            operationId: getAffiliateById
            parameters:
                -
                    in: path
                    name: id
                    description: 'Affiliate Id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                $ref: '#/definitions/AffiliateAccount'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        put:
            tags:
                - Affiliates
            description: 'Save an affiliate''s company account information'
            operationId: saveAffiliateById
            parameters:
                -
                    in: path
                    name: id
                    description: 'Affiliate ID'
                    type: integer
                    required: true
                -
                    in: query
                    name: companyName
                    description: 'Name of affiliate''s company'
                    type: string
                    required: true
                -
                    in: query
                    name: website
                    description: 'Affiliate''s company website'
                    type: string
                    required: true
                -
                    in: query
                    name: phone
                    description: 'Affiliate''s company phone number'
                    type: string
                    required: true
                -
                    in: query
                    name: contactName
                    description: 'Affiliate''s company contact name to receive system notifications from RevenueWire'
                    type: string
                    required: true
                -
                    in: query
                    name: technicalEmail
                    description: 'Affiliate''s company email address to receive system notifications from RevenueWire'
                    type: string
                    required: true
                -
                    in: query
                    name: address
                    description: 'Affiliate''s company address'
                    type: string
                    required: true
                -
                    in: query
                    name: city
                    description: 'Affiliate''s company city'
                    type: string
                    required: true
                -
                    in: query
                    name: stateProvince
                    description: 'Affiliate''s company country region (if applicable for that country)'
                    type: string
                -
                    in: query
                    name: zipPostalCode
                    description: 'Affiliate''s company postal code'
                    type: string
                    required: true
                -
                    in: query
                    name: gstNumber
                    description: 'Affiliate''s Canadian gst tax number (if applicable)'
                    type: string
                -
                    in: query
                    name: taxRegion
                    description: 'Affiliate''s Canadian province that tax number is registered in (if applicable)'
                    type: string
                -
                    in: query
                    name: paymentThreshold
                    description: 'Minimum amount that Affiliate wants to receive per payment'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                $ref: '#/definitions/AffiliateAccount'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /aliases:
        get:
            tags:
                - Aliases
            description: 'Get list of `Alias` objects.'
            operationId: aliasesGet
            parameters:
                -
                    name: groupAccountId
                    in: query
                    description: 'Group Account ID (admin only)'
                    type: integer
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Aliases'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/billings/{billingInfoId}':
        put:
            tags:
                - Billings
            description: 'Update customer billing info for a recurring profile using redit card'
            operationId: billingInfoUpdate
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: billingInfoId
                    in: path
                    description: 'bill info id for the recurring transaction item'
                    type: integer
                    required: true
                -
                    name: cardHolderFullName
                    in: formData
                    description: 'Card''s holder full name'
                    type: string
                    required: true
                -
                    name: cardNumber
                    in: formData
                    description: 'Credit Card number'
                    type: string
                    required: true
                -
                    name: cardExpiry
                    in: formData
                    description: 'Credit Card expiry'
                    type: string
                    required: true
                -
                    name: cardCCV
                    in: formData
                    description: 'Credit CCV (optional)'
                    type: string
                -
                    name: recurringTransactionItemId
                    in: formData
                    description: 'recurring transaction item to be updated (optional)'
                    type: string
                -
                    name: postalCode
                    in: formData
                    description: 'Postal code (optional)'
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/BillInfoResponse'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /billings/update-paypal:
        put:
            tags:
                - Billings
            description: 'Update profile using paypal express'
            operationId: billingInfoUpdatePaypal
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: ppToken
                    in: formData
                    description: 'sale info token generated by our side'
                    type: string
                -
                    name: token
                    in: formData
                    description: 'token generated by paypal'
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/BillInfoResponse'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/billings/{billingInfoId}/setup-paypal-url':
        post:
            tags:
                - Billings
            description: 'Generate a paypal express url for updating billing info'
            operationId: setUpPaypalUrl
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: billingInfoId
                    in: path
                    description: 'billing info id'
                    type: string
                    required: true
                -
                    name: returnUrl
                    in: formData
                    description: 'return url if everything goes well in paypal website'
                    type: string
                -
                    name: cancelUrl
                    in: formData
                    description: 'cancel url if customer click cancel button in paypal website'
                    type: string
                -
                    name: recurringTransactionItemId
                    in: formData
                    description: 'recurring transaction item to be updated (optional)'
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/PaypalUrl'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /customers:
        get:
            tags:
                - Customers
            description: 'Get list of `Customers` objects.'
            parameters:
                -
                    name: email
                    in: query
                    description: 'Customer''s Email'
                    type: string
                -
                    name: name
                    in: query
                    description: 'Customer''s Name'
                    type: string
                -
                    name: post_code
                    in: query
                    description: 'Customer''s Post code'
                    type: string
                -
                    name: phone
                    in: query
                    description: 'Customer''s phone'
                    type: string
                -
                    name: page
                    in: query
                    description: 'Page number'
                    type: integer
                    default: 1
                -
                    name: sort
                    in: query
                    description: 'Multiple sorting indicators separated by comma'
                    type: string
                    default: '-created,email'
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Customer'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/customers/{customerId}':
        get:
            tags:
                - Customers
            description: 'Get a `Customer` object.'
            parameters:
                -
                    name: customerId
                    in: path
                    description: 'Customer id'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Customer'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/customers/{customerUserId}/transactions':
        get:
            tags:
                - Customers
            description: 'Get a list of `Transactions` purchased by the customer.'
            parameters:
                -
                    name: customerUserId
                    in: path
                    description: 'Customer user id'
                    type: string
                    required: true
                -
                    name: accountId
                    in: query
                    description: 'Merchant account id'
                    type: number
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Transaction'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/customers/{customerUserId}/offers':
        get:
            tags:
                - Customers
            description: 'Get a list of `Offers` purchased by the customer.'
            parameters:
                -
                    name: customerUserId
                    in: path
                    description: 'Customer user id'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/CustomerOffers'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/customers/{customerId}/address/{transactionId}':
        put:
            tags:
                - Customers
            description: 'Update customer group account address'
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: customerId
                    in: path
                    description: 'Customer id'
                    type: string
                    required: true
                -
                    name: transactionId
                    in: path
                    description: 'transaction id'
                    type: integer
                    required: true
                -
                    name: name
                    in: formData
                    description: 'Customer''s name'
                    type: string
                -
                    name: address
                    in: formData
                    description: 'Customer''s address'
                    type: string
                -
                    name: countryCode
                    in: formData
                    description: 'Country code'
                    type: string
                -
                    name: city
                    in: formData
                    description: City
                    type: string
                -
                    name: postalCode
                    in: formData
                    description: 'Postal code'
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/CustomerAddress'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /destinations:
        get:
            tags:
                - Destinations
            description: 'Get list of `Destination` objects.'
            operationId: destinationsGet
            parameters:
                -
                    name: catalogFid
                    in: query
                    description: 'Offer''s catalog fid'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Array containing destination links'
                                type: array
                                items:
                                    $ref: '#/definitions/Destination'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        post:
            tags:
                - Destinations
            description: 'Add a new destination link'
            operationId: destinationsAdd
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: catalogFid
                    in: formData
                    description: 'Offer''s catalog fid'
                    type: string
                    required: true
                -
                    name: name
                    in: formData
                    description: 'Destination link name'
                    type: string
                    required: true
                -
                    name: url
                    in: formData
                    description: 'Destination link URL'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Newly created destination link'
                                $ref: '#/definitions/Destination'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/destinations/{id}':
        put:
            tags:
                - Destinations
            description: 'Update a destination link'
            operationId: destinationsUpdate
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: id
                    in: path
                    description: 'Destination id'
                    type: integer
                    required: true
                -
                    name: name
                    in: formData
                    description: 'Destination link name'
                    type: string
                    required: true
                -
                    name: url
                    in: formData
                    description: 'Destination link URL. Must begin with http:// or https://'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Newly updated destination link'
                                $ref: '#/definitions/Destination'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            tags:
                - Destinations
            description: 'Delete a destination link'
            operationId: destinationsDelete
            parameters:
                -
                    name: id
                    in: path
                    description: 'Destination id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /domains:
        get:
            tags:
                - Domains
            description: 'Get `Domain` objects.'
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        post:
            tags:
                - Domains
            description: 'Create `Domain` objects.'
            consumes:
                - multipart/form-data
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: domain
                    in: formData
                    description: Domain
                    type: string
                    required: true
                -
                    name: type
                    in: formData
                    description: 'Domain type'
                    type: string
                    required: true
                    enum:
                        - cart
                        - link
                -
                    name: cert
                    in: formData
                    description: Certificate
                    type: file
                    required: true
                -
                    name: key
                    in: formData
                    description: 'Certificate private key'
                    type: file
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/domains/{id}/upload-cert':
        post:
            tags:
                - Domains
            description: 'Update `Domain` certificate.'
            consumes:
                - multipart/form-data
                - application/x-www-form-urlencoded
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    type: string
                -
                    name: cert
                    in: formData
                    description: Certificate
                    type: file
                    required: true
                -
                    name: key
                    in: formData
                    description: 'Certificate private key'
                    type: file
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/domains/{id}':
        get:
            tags:
                - Domains
            description: 'Delete `Domain`.'
            operationId: domainsGet
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            tags:
                - Domains
            description: 'Get a `Domain`.'
            operationId: domainsDelete
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        put:
            tags:
                - Domains
            description: 'Update `Domain` status.'
            operationId: domainsUpdate
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    type: string
                -
                    name: status
                    in: query
                    description: 'Status of the domain'
                    type: string
                    enum:
                        - active
                        - pending
                    required: false
                -
                    name: hop
                    in: query
                    description: 'Whether to turn of hop for linker, by default, it should be on unless you know what you are doing.'
                    type: string
                    default: 'on'
                    required: false
                    enum:
                        - 'on'
                        - 'off'
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /domains/email:
        post:
            tags:
                - Domains
            description: 'Create a `Email` for the domain.'
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    in: body
                    name: labels
                    description: 'Json Formatted body'
                    required: true
                    schema:
                        $ref: '#/definitions/newDomain'
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/domains/email/{id}':
        delete:
            tags:
                - Domains
            description: 'Delete a `Email` for the domain.'
            parameters:
                -
                    name: id
                    in: path
                    description: 'Email address'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Domain'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /geo-info/supported-languages:
        get:
            tags:
                - GEO
            description: 'Get supported languages in the platform'
            operationId: geoGetSupportedLanguages
            responses:
                200:
                    description: 'Successful Responses'
                    schema:
                        $ref: '#/definitions/SupportedLanguages'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /geo-info/countries:
        get:
            tags:
                - GEO
            description: 'Get country options available in the platform .'
            operationId: geoGetCountryList
            responses:
                200:
                    description: 'Successful Responses'
                    schema:
                        $ref: '#/definitions/CountryList'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/merchants/{merchantId}/block-affiliate/':
        post:
            tags:
                - Merchants
            summary: 'Create merchant affiliate block'
            description: 'Create a block which merchant does not allow affiliate sale products'
            operationId: createAffiliateBlock
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: merchantId
                    in: path
                    description: 'Merchant group account id'
                    type: integer
                    required: true
                -
                    name: affiliateId
                    in: formData
                    description: 'Affiliate group account id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Merchant'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/merchants/{merchantId}/block-affiliate/{blockId}/':
        delete:
            tags:
                - Merchants
            summary: 'Delete Merchant Affiliate Block'
            description: 'Delete merchant affiliate block to make affiliate to sell merchant product again'
            operationId: deleteAffiliateBlock
            parameters:
                -
                    name: merchantId
                    in: path
                    description: 'Merchant id'
                    type: integer
                    required: true
                -
                    name: blockId
                    in: path
                    description: 'Block id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Merchant'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/orders/{orderId}':
        get:
            tags:
                - Orders
            description: 'Get a list of transactions a order has'
            parameters:
                -
                    in: path
                    name: orderId
                    description: 'Order id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Transaction'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /orders/purchase-lookup:
        post:
            tags:
                - Orders
            description: 'Look up order info by email and send it'
            consumes:
                - multipart/form-data
            parameters:
                -
                    in: formData
                    name: email
                    description: email
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/orders/customer-email/{email}':
        get:
            tags:
                - Orders
            description: 'Get a list of orders'
            parameters:
                -
                    name: email
                    in: path
                    description: 'Customer email'
                    type: string
                    required: true
                -
                    name: merchantFid
                    in: query
                    description: 'Merchant fid (optional)'
                    type: string
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CustomerOrders'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /profiles:
        get:
            tags:
                - Profiles
            description: 'Gets `Profiles` object.'
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Profile'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        put:
            tags:
                - Profiles
            description: 'Update `Profiles` object.'
            parameters:
                -
                    name: first_name
                    in: query
                    description: 'User''s first name'
                    type: string
                    required: true
                -
                    name: last_name
                    in: query
                    description: 'User''s lastname'
                    type: string
                    required: true
                -
                    name: email
                    in: query
                    description: 'User''s email'
                    type: string
                    required: true
                -
                    name: timezone
                    in: query
                    description: 'Setup your timezone.'
                    type: string
                -
                    name: default_dashboard
                    in: query
                    description: 'User''s default dashboard'
                    type: string
                    enum:
                        - Sales
                        - Chargebacks
                -
                    name: default_product_view
                    in: query
                    description: 'User''s default product view.'
                    type: string
                    enum:
                        - List
                        - Grid
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Profile'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /profiles/change-password:
        put:
            tags:
                - Profiles
            description: 'Update `Profiles` password.'
            parameters:
                -
                    name: current_password
                    in: query
                    description: 'User''s current password'
                    type: string
                    format: password
                    required: true
                -
                    name: new_password
                    in: query
                    description: 'User''s new password'
                    type: string
                    format: password
                    required: true
                -
                    name: confirm_password
                    in: query
                    description: 'User''s confirm password'
                    type: string
                    format: password
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Profile'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/subscriptions/offer/{transactionItemId}':
        get:
            tags:
                - Subscriptions
            description: 'Get offer details'
            operationId: subscriptionGetOffer
            parameters:
                -
                    in: path
                    name: transactionItemId
                    description: 'Transaction item id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Offer'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/subscriptions/{recurringTransactionItemId}/cancel':
        put:
            tags:
                - Subscriptions
            description: 'Cancal customer recurring profile'
            operationId: subscriptionCancel
            parameters:
                -
                    in: path
                    name: recurringTransactionItemId
                    description: 'Recurring transaction item id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/subscriptions/legacy/{transactionItemId}/cancel':
        put:
            tags:
                - Subscriptions
            description: 'Depricated, legacy cancal customer recurring profile'
            operationId: legacySubscriptionCancel
            parameters:
                -
                    in: path
                    name: transactionItemId
                    description: 'Transaction item id'
                    type: integer
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /templates/sync:
        post:
            tags:
                - 'Templates Management'
            summary: 'Sync templates from cart 2.0'
            operationId: templateSync
            parameters:
                -
                    name: template
                    in: body
                    required: true
                    schema:
                        $ref: '#/definitions/NewTemplates'
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Templates'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /templates/deploy:
        post:
            summary: 'Deploy templates to a new version'
            tags:
                - 'Templates Management'
            operationId: templatesDeploy
            parameters:
                -
                    name: version
                    in: formData
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Deployment'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /templates/release:
        post:
            summary: 'Release templates'
            tags:
                - 'Templates Management'
            operationId: templatesRelease
            parameters:
                -
                    name: version
                    in: formData
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Deployment'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /templates:
        get:
            tags:
                - Templates
            description: 'Get a list of templates'
            operationId: templatesGet
            parameters:
                -
                    name: accountId
                    in: query
                    description: 'Merchant account id'
                    type: string
                    required: false
                -
                    name: keywords
                    in: query
                    description: 'Search name or fid'
                    type: string
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Templates'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /token:
        post:
            operationId: tokenGenerate
            tags:
                - Token
            description: "Create a new `Token`.\n"
            parameters:
                -
                    name: username
                    in: header
                    description: 'User''s username'
                    type: string
                -
                    name: password
                    in: header
                    description: 'User''s password'
                    type: string
            responses:
                200:
                    description: 'Successful Responses'
                    schema:
                        $ref: '#/definitions/Token'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /trackings:
        get:
            tags:
                - Trackings
            description: 'Get list of `Tracking` objects.'
            operationId: trackingsGet
            parameters:
                -
                    name: catalogId
                    in: query
                    description: 'Offer''s catalog ID'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Array containing tracking objects'
                                type: array
                                items:
                                    $ref: '#/definitions/Tracking'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        post:
            tags:
                - Trackings
            description: 'Add a new tracking'
            operationId: trackingsAdd
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: catalogId
                    in: formData
                    description: 'Offer''s catalog ID'
                    type: string
                    required: true
                -
                    name: type
                    in: formData
                    description: 'Tracking type'
                    type: string
                    required: true
                -
                    name: data
                    in: formData
                    description: 'Tracking specific data'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Newly created tracking'
                                $ref: '#/definitions/Tracking'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/trackings/{id}':
        put:
            tags:
                - Trackings
            description: 'Update a tracking'
            operationId: trackingsUpdate
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: id
                    in: path
                    description: 'Tracking ID'
                    type: string
                    required: true
                -
                    name: data
                    in: formData
                    description: 'Tracking specific data'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Newly updated tracking'
                                $ref: '#/definitions/Tracking'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            tags:
                - Trackings
            description: 'Delete a Tracking'
            operationId: trackingsDelete
            parameters:
                -
                    name: id
                    in: path
                    description: 'Tracking ID'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/trackings/{id}/test':
        post:
            tags:
                - Trackings
            description: 'Send a test postback to a tracking (for GET type only)'
            operationId: postbackTest
            parameters:
                -
                    name: id
                    in: path
                    description: 'Tracking ID'
                    type: string
                    required: true
                -
                    name: destinationId
                    in: formData
                    description: 'Test destination ID'
                    type: integer
                    required: true
                -
                    name: catalogId
                    in: formData
                    description: 'Catalog offer ID'
                    type: integer
                    required: true
                -
                    name: clickId
                    in: formData
                    description: 'click ID'
                    type: string
                    required: false
                -
                    name: subId
                    in: formData
                    description: 'sub ID'
                    type: string
                    required: false
                -
                    name: subId2
                    in: formData
                    description: 'sub ID 2'
                    type: string
                    required: false
                -
                    name: subId3
                    in: formData
                    description: 'sub ID 3'
                    type: string
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        required:
                            - response
                            - data
                        properties:
                            response:
                                $ref: '#/definitions/Response'
                            data:
                                description: 'Test results'
                                $ref: '#/definitions/PostbackTest'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /users/login:
        post:
            tags:
                - Users
            description: 'Login an user'
            operationId: customerLogin
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: username
                    in: formData
                    description: 'User name'
                    type: string
                    required: true
                -
                    name: password
                    in: formData
                    description: 'User password'
                    type: string
                    required: true
                -
                    name: accountId
                    in: formData
                    description: 'User Account Id'
                    type: string
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Identity'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /users/order-login:
        post:
            tags:
                - Users
            description: 'Login an user by order reference'
            operationId: customerOrderLogin
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: orderReference
                    in: formData
                    description: 'Order reference'
                    type: string
                    required: true
                -
                    name: lastFourCC
                    in: formData
                    description: 'Last four CC digets'
                    type: string
                    required: true
                -
                    name: postCode
                    in: formData
                    description: Postcode/Zip
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Identity'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /users/verify:
        put:
            tags:
                - Users
            description: 'Verify an user account'
            operationId: userVerify
            parameters:
                -
                    name: email
                    in: query
                    description: 'User email'
                    type: string
                    required: true
                -
                    name: token
                    in: query
                    description: 'Token generated when creating a customer user'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /users/forget-password:
        post:
            tags:
                - Users
            description: 'Forgot my password'
            operationId: userForgotPassword
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: email
                    in: formData
                    description: 'Your email address'
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/Response'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    /users/reset-password:
        post:
            tags:
                - Users
            description: 'Reset my password'
            operationId: userResetPassword
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: email
                    in: formData
                    description: 'Your email address'
                    type: string
                -
                    name: token
                    in: formData
                    description: 'Your verificaton token'
                    type: string
                -
                    name: password
                    in: formData
                    description: 'Your new password'
                    type: string
                    format: password
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/users/{id}/update-password':
        put:
            tags:
                - Users
            description: 'Change password'
            operationId: userUpdatePassword
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: id
                    in: path
                    description: 'User id'
                    required: true
                    type: integer
                -
                    name: oldPassword
                    in: formData
                    description: 'Your current password'
                    format: password
                    required: true
                    type: string
                -
                    name: newPassword
                    in: formData
                    description: 'your new password'
                    format: password
                    required: true
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/users/{id}/update-email':
        post:
            tags:
                - Users
            description: 'request email change'
            operationId: userUpdateEmail
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: id
                    in: path
                    description: 'User id'
                    required: true
                    type: integer
                -
                    name: newEmail
                    in: formData
                    description: 'New email address'
                    required: true
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/UpdateEmailResponse'
                500:
                    description: 'Error responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/users/{id}/update-email/{token}':
        put:
            tags:
                - Users
            description: 'confirm email change'
            operationId: userUpdateEmailConfirm
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: id
                    in: path
                    description: 'User id'
                    required: true
                    type: integer
                -
                    name: token
                    in: path
                    description: 'Token generated when creating email update request'
                    type: string
                    required: true
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error responses'
                    schema:
                        $ref: '#/definitions/Error'
                405:
                    description: 'Method Not allowed response'
                    schema:
                        $ref: '#/definitions/Error'
    /users/sign-up:
        post:
            description: 'Sign up a customer'
            operationId: customerSignup
            tags:
                - Users
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: email
                    in: formData
                    description: 'User''s email'
                    required: true
                    type: string
                -
                    name: password
                    in: formData
                    description: 'User''s password'
                    format: password
                    required: true
                    type: string
                -
                    name: firstName
                    in: formData
                    description: 'First Name'
                    required: false
                    type: string
                -
                    name: lastName
                    in: formData
                    description: 'First Name'
                    required: false
                    type: string
                -
                    name: language
                    in: formData
                    description: 'Preferred Language code for the user'
                    type: string
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
    '/users/{id}':
        get:
            tags:
                - Users
            description: 'Get User'
            operationId: userGet
            parameters:
                -
                    in: path
                    name: id
                    description: 'Users Id'
                    required: true
                    type: string
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
        put:
            tags:
                - Users
            description: 'Update User'
            operationId: userUpdate
            consumes:
                - application/x-www-form-urlencoded
            parameters:
                -
                    name: id
                    in: path
                    required: true
                    type: integer
                -
                    name: accountFullName
                    in: formData
                    description: 'User''s name'
                    required: false
                    type: string
                -
                    name: email
                    in: formData
                    description: 'User''s contact email'
                    type: string
                    required: false
                -
                    name: timezone
                    in: formData
                    description: 'Setup your timezone.'
                    type: string
                    required: false
                -
                    name: defaultDashboard
                    in: formData
                    description: 'User''s default dashboard'
                    type: string
                    required: false
                    enum:
                        - Sales
                        - Chargebacks
                -
                    name: defaultProductView
                    in: formData
                    description: 'User''s default product view.'
                    type: string
                    required: false
                    enum:
                        - List
                        - Grid
                -
                    name: language
                    in: formData
                    description: 'Preferred Language code for the user'
                    type: string
                    required: false
            responses:
                200:
                    description: 'Successful responses'
                    schema:
                        $ref: '#/definitions/User'
                500:
                    description: 'Error Responses'
                    schema:
                        $ref: '#/definitions/Error'
